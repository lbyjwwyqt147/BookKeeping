<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>BookKeeping</display-name>
  <!-- 继承主配置文件 -->
  <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:applicationContext.xml
            classpath:spring-memcached.xml
            classpath:spring-security.xml
        </param-value>
  </context-param>
  
   <!--Spring上下文监听器-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <!-- Spring Security会话控制 -->    
   <listener>  
     <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>  
   </listener> 
    
   <!-- 多文件上传 -->
    <filter>
        <filter-name>MultipartFilter</filter-name>
        <filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
    </filter>
    
     <filter-mapping>
        <filter-name>MultipartFilter</filter-name>
        <servlet-name>/*</servlet-name>
    </filter-mapping>
    
    
   <!-- spring security 过滤器， 这个的位置顺序和spring的监听器启动位置没有什么关系，可以放在spring监听器的前面，也可以放置在后面。
	    但一定要放在struts的过滤器前面，因为如果有自定义的登录页面，当登录时，就会跳转到了struts对应的action中，
	    导致无法使用spring security的验证登录了，正常情况下，应该登录时，会经过自定义的MyUsernamePasswordAuthenticationFilter类的attemptAuthentication方法进行验证。
	  如果验证成功，则登录成功，不再执行对应的action验证登录 ；spring security验证失败，则跳回指定登录失败的页面。  
    --> 
    <filter>
	  <filter-name>springSecurityFilterChain</filter-name>
	  <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	
	<filter-mapping>
	  <filter-name>springSecurityFilterChain</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>

    <!-- Character Encoding filter 解决中文问题 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
  
  
    
  
     <!-- springmvc 控制器 -->
     <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
     <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
     </servlet-mapping>
  
     
    
     <!-- Spring刷新Interceptor防止内存泄漏  -->
    <listener>
     <listener-class>
       org.springframework.web.util.IntrospectorCleanupListener
     </listener-class>
    </listener>
 
  
	  <welcome-file-list>
	    <welcome-file>index.html</welcome-file>
	    <welcome-file>index.htm</welcome-file>
	    <welcome-file>index.jsp</welcome-file>
	    <welcome-file>default.html</welcome-file>
	    <welcome-file>default.htm</welcome-file>
	    <welcome-file>default.jsp</welcome-file>
	  </welcome-file-list>
</web-app>