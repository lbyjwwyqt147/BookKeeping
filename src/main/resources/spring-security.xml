<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:security="http://www.springframework.org/schema/security"
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd  
http://www.springframework.org/schema/security 
http://www.springframework.org/schema/security/spring-security.xsd">

 <!-- 开发环境可以放置 <debug /> 配置，会输出详细Security处理日志，正式环境建议屏蔽 <debug /> 配置 -->
 <debug />
 
 <!-- 配置不需要过滤的链接 -->
 <http pattern="/bookkeeping/user/userLogin" security="none" /> 
 <http pattern="/login.html" security="none" />
 <http pattern="/noAuthority.html" security="none" />
  
 
 
 <!-- <http use-expressions="true" auto-config="true"  entry-point-ref="myAuthenticationEntryPoint"> -->
 
 <http use-expressions="true" auto-config="true">
         <!-- 没有权限跳转的页面 -->
         <access-denied-handler error-page="/pages/settings/error/defeated.jsp" />
 
         <!-- 以上未列出的，也都必须验证才能访问   会去调用MyAccessDecisionManager 中的方法验证权限 -->
        <intercept-url pattern="/bookkeeping/**" access="isAuthenticated()" />
 

       <!-- 使用自定义登录验证时 不需要 form-login  注释掉     如果需要使用默认的则取消注释 -->             
      <!--  <form-login login-page='/BookKeeping'  username-parameter="username" default-target-url='/index.html'/>  -->
      
    
     <logout logout-url="/logout" logout-success-url="/BookKeeping" invalidate-session="true"/>
                    
     <!-- 解决出现 HTTP Status 403 - Could not verify the provided CSRF token because your session was not found. -->
     <csrf disabled="true"/>
     
     <custom-filter ref="mySecurityFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
 
 </http>
 

 
 <!--验证配置，认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
 <authentication-manager alias="myAuthenticationManager">
		<authentication-provider user-service-ref="myUserDetailServiceImpl" >
		  <password-encoder hash="md5"></password-encoder>
		
		</authentication-provider>
 </authentication-manager>
 


</beans:beans>  